name: Build
description: "Builds the given Pijul version"
inputs:
  version:
    description: "Pijul version to build"
    required: true
    type: string
runs:
  using: "composite"
  steps:
    - name: Set up environment
      shell: bash
      run: |
        echo "CARGO_TERM_COLOR=always" | tee -a "$GITHUB_ENV"
        echo "VCPKG_DEFAULT_TRIPLET=x64-windows-static-md" | tee -a "$GITHUB_ENV"
        echo "VCPKG_INSTALLED_DIR=${{ github.workspace }}/vcpkg_installed" | tee -a "$GITHUB_ENV"
        echo "LIB=${{ github.workspace }}/vcpkg_installed/x64-windows-static-md/lib" | tee -a "$GITHUB_ENV"
        echo "OPENSSL_DIR=${{ github.workspace }}/vcpkg_installed/x64-windows-static-md" | tee -a "$GITHUB_ENV"
    - name: Download Pijul crate
      shell: bash
      run: |
        # Extract the Pijul crate files directory
        curl -L https://crates.io/api/v1/crates/pijul/${{ inputs.version }}/download | tar -xzf - --directory . --strip-components 1
        # Remove the existing Cargo.lock, we will generate our own
        rm Cargo.lock
    - uses: lukka/run-vcpkg@v11
      with:
        vcpkgGitCommitId: "01f602195983451bc83e72f4214af2cbc495aa94"
        runVcpkgInstall: true
    - name: Cache Cargo target dir
      uses: actions/cache@v4
      with:
        key: cargo-target
        path: ${{ github.workspace }}/target
    - name: Build pijul
      shell: bash
      run: |
        cargo build --release
        cp target/release/pijul.exe pijul.exe
        mv Cargo.lock pijul.lock
    - name: Build pijul-with-git
      shell: bash
      run: |
        cargo build --release --features git
        cp target/release/pijul.exe pijul-with-git.exe
        mv Cargo.lock pijul-with-git.lock
