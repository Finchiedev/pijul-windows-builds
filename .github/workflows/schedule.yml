# This is a basic workflow to help you get started with Actions

name: Build New Releases When Available

# Controls when the action will run. 
on:
  schedule:
    - cron: '0 0,12 * * *'
  
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # see if there's a version with no release
  check:
    runs-on: ubuntu-latest
    outputs:
      do_build: ${{ steps.test.outputs.do_build }}
      latest_version: ${{ steps.test.outputs.latest_version }}
    
    steps:
      - id: test
        run: |
          cargo search pijul
          cargo search pijul | head -1
          cargo search pijul | head -1 | awk -F'"' '{ print $2; }'
          latest_version=$(cargo search pijul | head -1 | awk -F'"' '{ print $2; }')
          echo "latest_version=$latest_version" | tee -a $GITHUB_OUTPUT
          latest_release=$(curl https://api.github.com/repos/boringcactus/pijul-windows-builds/releases/latest | jq -r .tag_name)
          if [ "$latest_version" != "$latest_release" ]; then
            echo "do_build=yes" | tee -a $GITHUB_OUTPUT
          else
            echo "do_build=no" | tee -a $GITHUB_OUTPUT
          fi

  build-windows:
    runs-on: windows-latest
    needs: check
    if: needs.check.outputs.do_build == 'yes'
    defaults:
      run:
        shell: bash

    steps:
      - name: Install vcpkg deps
        run: |
          $VCPKG_INSTALLATION_ROOT/vcpkg.exe install --triplet=x64-windows-static-md xxhash zstd openssl openssl-windows
      - name: Build pijul
        run: |
          export VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT
          export LIB=$VCPKG_ROOT/installed/x64-windows-static-md/lib
          export OPENSSL_DIR=$VCPKG_ROOT/installed/x64-windows-static-md
          cargo install pijul --version ${{ needs.check.outputs.latest_version }} --root .
      - name: Upload binary
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          file: bin/pijul.exe
          tag: ${{ needs.check.outputs.latest_version }}
